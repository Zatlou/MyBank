name: CI & CD

on:
  push:
    branches: [ main ]

jobs:
  build-and-publish:
    name: ðŸš§ Build, Test & Publish
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP 8.2
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2

      - name: Validate composer.json
        run: composer validate --strict

      - name: Install Composer dependencies
        run: composer install --no-interaction --no-progress --prefer-dist

      - name: Run PHPUnit
        run: vendor/bin/phpunit --testdox

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push API image
        uses: docker/build-push-action@v4
        with:
          context: ./api
          file: ./api/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/mybank-api:latest

      - name: Build & push Front image
        uses: docker/build-push-action@v4
        with:
          context: ./front
          file: ./front/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/mybank-front:latest

  deploy-to-vm:
    name: ðŸš€ Deploy to VM
    needs: build-and-publish
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code (pour le SSH keyscan)
        uses: actions/checkout@v4

      - name: Setup SSH agent
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Ensure known_hosts
        run: |
          ssh-keyscan -H ${{ secrets.VM_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy & migrate
        run: |
          ssh ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }} << 'EOF'
            cd ~/mybank
            # recharge .env
            export $(grep -v '^#' .env | xargs)
            # pull derniÃ¨res images
            docker-compose pull
            # (re)lance les conteneurs
            docker-compose up -d
            # exÃ©cute les migrations
            docker-compose exec api \
              php bin/console doctrine:migrations:migrate --no-interaction
          EOF
