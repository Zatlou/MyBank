# .github/workflows/ci-cd.yml
name: CI & CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-publish:
    name: üöß Build, Test & Publish API
    runs-on: ubuntu-latest

    # 1) On l√®ve un service Postgres pour le job
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_DB: mybank
          POSTGRES_USER: user
          POSTGRES_PASSWORD: pass
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U user -d mybank"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    # 2) On d√©finit la variable DATABASE_URL pour l'environnement de test
    env:
      DATABASE_URL: "pgsql://user:pass@localhost:5432/mybank?serverVersion=16&charset=utf8"
      APP_ENV: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP 8.2 + extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: mbstring, intl, pdo_pgsql, xml, ctype, json
          coverage: none

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('api/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Validate composer.json
        working-directory: api
        run: composer validate --no-check-publish

      - name: Install API dependencies
        working-directory: api
        run: composer install --no-interaction --prefer-dist

      - name: Wait for PostgreSQL
        run: |
          until pg_isready -h localhost -U user; do
            echo "Waiting for Postgres‚Ä¶"
            sleep 1
          done

      - name: Create database & run migrations
        working-directory: api
        run: |
          php bin/console doctrine:database:create --if-not-exists --env=test
          php bin/console doctrine:migrations:migrate --no-interaction --env=test

      - name: Run PHPUnit
        working-directory: api
        run: vendor/bin/phpunit --testdox
